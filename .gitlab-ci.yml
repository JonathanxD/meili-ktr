# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:jdk16


# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  CACHE_FALLBACK_KEY: "master"

.shared_windows_runners:
  tags:
    - shared-windows
    - windows
    - windows-1809

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  image: azul/zulu-openjdk:17.0.1
  script:
    - apt update
    - apt install -y build-essential libncurses5 libcurl4-openssl-dev
    - chmod +x ./gradlew
    - './gradlew build'
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - build
      - .gradle

deploy:
  stage: deploy
  image: azul/zulu-openjdk:17.0.1
  script:
    - apt update
    - apt install -y build-essential libncurses5 libcurl4-openssl-dev
    - chmod +x ./gradlew
    - './gradlew publishAllPublicationsToGitLabRepository'
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  only:
    - tags

deploy_windows:
  extends:
    - .shared_windows_runners
  stage: deploy
  script:
    - choco install -y openjdk --version 17.0.1 --params "/q /norestart"
    - refreshenv
    - '.\gradlew.bat publishAllPublicationsToGitLabRepository'
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  only:
    - tags